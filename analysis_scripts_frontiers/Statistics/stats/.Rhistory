## Blink Amplitudes
# We only compare the correction methods in the ANOVA because we are not interested whether rASR or ASR correct significantly
# in comparison to uncorrected data but only amongst themselves.
raw <- read.table(file = "data/blink_uncorrected.csv",header = FALSE, dec = ".", col.names = "amplitude", sep=",")
raw$condition <- c(c(rep("inside",27)), c(rep("outside",27)))
raw$subj      <- c(c(1:27), c(1:27))
raw$method    <- c(rep("uncorrected", 27*2))
asr <- read.table(file = "data/blink_asr.csv",header = FALSE, dec = ".", col.names = "amplitude", sep=",")
asr$condition <- c(c(rep("inside",27)), c(rep("outside",27)))
asr$subj      <- c(c(1:27), c(1:27))
asr$method    <- c(rep("asr", 27*2))
rasr <- read.table(file = "data/blink_rasr.csv",header = FALSE, dec = ".", col.names = "amplitude", sep=",")
rasr$condition <- c(c(rep("inside",27)), c(rep("outside",27)))
rasr$subj      <- c(c(1:27), c(1:27))
rasr$method    <- c(rep("rasr", 27*2))
library(ez)
library(effsize)
# combine correction methods for ANOVA, leave uncorected data out
all <- rbind(asr, rasr)
aov_group <- ezANOVA(data=all, dv = amplitude, within = .(condition, method), wid=subj)
print(aov_group)
source("pairwise.t.test.with.t.and.df.R")
result <- pairwise.t.test.with.t.and.df(all$amplitude, all$condition, adjust.method="bonf", paired=TRUE)
# print t-test result
print(result)
# Print t-values
print(c("t-value: ", result[[5]]))
# Print dfs
print(c("Df: ", result[[6]]))
# Cohen's D for t-test
cohen.d(all$amplitude, all$condition, paired = TRUE)
a <- mean(all$amplitude[all$condition== "inside" & all$method == "rasr"])
b <- mean(all$amplitude[all$condition== "inside" & all$method == "asr"])
c <- mean(all$amplitude[all$condition== "outside" & all$method == "rasr"])
d <- mean(all$amplitude[all$condition== "outside" & all$method == "asr"])
plot(c(a,b,c,d), xlab = "methods", ylab = "mean blink amplitude", xaxt = "n")
# Changing x axis
axis(1, at=1:4, labels=c("in rASR","in ASR", "out rASR","out ASR"))
legend("topright", legend=c(a,b,c,d))
print(c(mean(c(a,b)), "inside"))
print(c(mean(c(c,d)), "outside"))
un_in <- mean(raw$amplitude[raw$condition== "inside" & raw$method == "uncorrected"])
print(c(un_in, "uncorrected inside"))
un_out <- mean(raw$amplitude[raw$condition== "outside" & raw$method == "uncorrected"])
print(c(un_out, "uncorrected outside"))
## Blink Amplitudes
# We only compare the correction methods in the ANOVA because we are not interested whether rASR or ASR correct significantly
# in comparison to uncorrected data but only amongst themselves.
raw <- read.table(file = "data/blink_uncorrected.csv",header = FALSE, dec = ".", col.names = "amplitude", sep=",")
raw$condition <- c(c(rep("inside",27)), c(rep("outside",27)))
raw$subj      <- c(c(1:27), c(1:27))
raw$method    <- c(rep("uncorrected", 27*2))
asr <- read.table(file = "data/blink_asr.csv",header = FALSE, dec = ".", col.names = "amplitude", sep=",")
asr$condition <- c(c(rep("inside",27)), c(rep("outside",27)))
asr$subj      <- c(c(1:27), c(1:27))
asr$method    <- c(rep("asr", 27*2))
rasr <- read.table(file = "data/blink_rasr.csv",header = FALSE, dec = ".", col.names = "amplitude", sep=",")
rasr$condition <- c(c(rep("inside",27)), c(rep("outside",27)))
rasr$subj      <- c(c(1:27), c(1:27))
rasr$method    <- c(rep("rasr", 27*2))
library(ez)
library(effsize)
# combine correction methods for ANOVA, leave uncorected data out
all <- rbind(asr, rasr)
aov_group <- ezANOVA(data=all, dv = amplitude, within = .(condition, method), wid=subj)
print(aov_group)
source("pairwise.t.test.with.t.and.df.R")
result <- pairwise.t.test.with.t.and.df(all$amplitude, all$condition, adjust.method="bonf", paired=TRUE)
# print t-test result
print(result)
# Print t-values
print(c("t-value: ", result[[5]]))
# Print dfs
print(c("Df: ", result[[6]]))
# Cohen's D for t-test
cohen.d(all$amplitude, all$condition, paired = TRUE)
a <- mean(all$amplitude[all$condition== "inside" & all$method == "rasr"])
b <- mean(all$amplitude[all$condition== "inside" & all$method == "asr"])
c <- mean(all$amplitude[all$condition== "outside" & all$method == "rasr"])
d <- mean(all$amplitude[all$condition== "outside" & all$method == "asr"])
plot(c(a,b,c,d), xlab = "methods", ylab = "mean blink amplitude", xaxt = "n")
# Changing x axis
axis(1, at=1:4, labels=c("in rASR","in ASR", "out rASR","out ASR"))
legend("topright", legend=c(a,b,c,d))
print(c(mean(c(a,b)), "inside"))
print(c(mean(c(c,d)), "outside"))
un_in <- mean(raw$amplitude[raw$condition== "inside" & raw$method == "uncorrected"])
print(c(un_in, "uncorrected inside"))
un_out <- mean(raw$amplitude[raw$condition== "outside" & raw$method == "uncorrected"])
print(c(un_out, "uncorrected outside"))
install.packages("effsize")
## Blink Amplitudes
# We only compare the correction methods in the ANOVA because we are not interested whether rASR or ASR correct significantly
# in comparison to uncorrected data but only amongst themselves.
raw <- read.table(file = "data/blink_uncorrected.csv",header = FALSE, dec = ".", col.names = "amplitude", sep=",")
raw$condition <- c(c(rep("inside",27)), c(rep("outside",27)))
raw$subj      <- c(c(1:27), c(1:27))
raw$method    <- c(rep("uncorrected", 27*2))
asr <- read.table(file = "data/blink_asr.csv",header = FALSE, dec = ".", col.names = "amplitude", sep=",")
asr$condition <- c(c(rep("inside",27)), c(rep("outside",27)))
asr$subj      <- c(c(1:27), c(1:27))
asr$method    <- c(rep("asr", 27*2))
rasr <- read.table(file = "data/blink_rasr.csv",header = FALSE, dec = ".", col.names = "amplitude", sep=",")
rasr$condition <- c(c(rep("inside",27)), c(rep("outside",27)))
rasr$subj      <- c(c(1:27), c(1:27))
rasr$method    <- c(rep("rasr", 27*2))
library(ez)
library(effsize)
# combine correction methods for ANOVA, leave uncorected data out
all <- rbind(asr, rasr)
aov_group <- ezANOVA(data=all, dv = amplitude, within = .(condition, method), wid=subj)
print(aov_group)
source("pairwise.t.test.with.t.and.df.R")
result <- pairwise.t.test.with.t.and.df(all$amplitude, all$condition, adjust.method="bonf", paired=TRUE)
# print t-test result
print(result)
# Print t-values
print(c("t-value: ", result[[5]]))
# Print dfs
print(c("Df: ", result[[6]]))
# Cohen's D for t-test
cohen.d(all$amplitude, all$condition, paired = TRUE)
a <- mean(all$amplitude[all$condition== "inside" & all$method == "rasr"])
b <- mean(all$amplitude[all$condition== "inside" & all$method == "asr"])
c <- mean(all$amplitude[all$condition== "outside" & all$method == "rasr"])
d <- mean(all$amplitude[all$condition== "outside" & all$method == "asr"])
plot(c(a,b,c,d), xlab = "methods", ylab = "mean blink amplitude", xaxt = "n")
# Changing x axis
axis(1, at=1:4, labels=c("in rASR","in ASR", "out rASR","out ASR"))
legend("topright", legend=c(a,b,c,d))
print(c(mean(c(a,b)), "inside"))
print(c(mean(c(c,d)), "outside"))
un_in <- mean(raw$amplitude[raw$condition== "inside" & raw$method == "uncorrected"])
print(c(un_in, "uncorrected inside"))
un_out <- mean(raw$amplitude[raw$condition== "outside" & raw$method == "uncorrected"])
print(c(un_out, "uncorrected outside"))
## Map dissimilarities
# Look at Z-transformed R^2 values for blink map correlations
filt_asr <- read.table(file = "data/ztrans_blink_corr_FILT_ASR_.csv",header = FALSE, dec = ".", col.names = "corr", sep=",")
filt_asr$condition <- c(c(rep("inside",27)), c(rep("outside",27)))
filt_asr$subj      <- c(1:27)
filt_asr$method    <- c(rep("filt_asr", 27*2))
filt_riem <- read.table(file = "data/ztrans_blink_corr_FILT_RIEM_.csv",header = FALSE, dec = ".", col.names = "corr", sep=",")
filt_riem$condition <- c(c(rep("inside",27)), c(rep("outside",27)))
filt_riem$subj      <- c(1:27)
filt_riem$method    <- c(rep("filt_riem", 27*2))
### testing time
library(ez)
library(effsize)
# combine all for ANOVA
all <- rbind(filt_asr,filt_riem)
aov_group <- ezANOVA(data=all, dv = corr, within = .(condition, method), wid=subj)
print(aov_group)
# plot
a <- mean(all$corr[all$condition== "inside" & all$method == "filt_asr"])
b <- mean(all$corr[all$condition== "inside" & all$method == "filt_riem"])
# this should be transformed back when reported
plot(c(a,b), xlab = "methods", ylab = "mean r^2 corr values (transformed!)", xaxt = "n")
# Changing x axis
axis(1, at=1:2, labels=c("uncorr ~ ASR","uncorr ~ rASR"))
# interaction effect
# outside
one <- filt_asr$corr[filt_asr$condition == "outside"];
two <- filt_riem$corr[filt_riem$condition == "outside"];
x <- c(one, two);
grouping <- c(c(rep("filt asr outside", 27)),c(rep("filt rasr outside", 27)));
source("pairwise.t.test.with.t.and.df.R")
result <- pairwise.t.test.with.t.and.df(x, grouping, adjust.method="bonf", paired=TRUE)
# print t-test result
print(result)
# Print t-values
print(c("t-value: ", result[[5]]))
# Print dfs
print(c("Df: ", result[[6]]))
print(c("mean of filt_asr outside: ", mean(one)))
print(c("mean of filt_riem outside: ", mean(two)))
cohen.d(x, as.factor(grouping))
# inside
one <- filt_asr$corr[filt_asr$condition == "inside"];
two <- filt_riem$corr[filt_riem$condition == "inside"];
x <- c(one, two);
grouping <- c(c(rep("filt asr inside", 27)),c(rep(" filt rasr inside", 27)));
source("pairwise.t.test.with.t.and.df.R")
result <- pairwise.t.test.with.t.and.df(x, grouping, adjust.method="bonf", paired=TRUE)
# print t-test result
print(result)
# Print t-values
print(c("t-value: ", result[[5]]))
# Print dfs
print(c("Df: ", result[[6]]))
print(c("mean of filt_asr inside: ", mean(one)))
print(c("mean of filt_riem inside: ", mean(two)))
install.packages("R.matlab")
asr_total <- readMat("../../compTimes/ASR_CALIB.mat")
library(R.matlab)
asr_total <- readMat("../../compTimes/ASR_CALIB.mat")
asr_total
data = asr_total[[1]]
data
library(R.matlab)
rawData = readMat("../../compTimes/ASR_CALIB.mat")
data = rawData[[1]]
matrix = do.call(rbind, data['data',,])
totalSec = unlist(data['data.length.sec',,])
sequence = unlist(data['sequence',,])
measures = as.data.frame(t(matrix))
measures
library(R.matlab)
rawData = readMat("../../compTimes/ASR_CALIB.mat")
data = rawData[[1]]
data
do.call(rbind, data['data',,])
View(rawData)
View(rawData)
asr_total <- read.table(file = "data/asr_total.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
raw$method    <- c(rep("asr_total", 27*2))
asr_total
mean(asr_total)
mean(asr_total$s)
source("pairwise.t.test.with.t.and.df.R")
all <- rbind(asr_minimal, rasr_minimal)
# computation times ttest
asr_total <- read.table(file = "data/asr_total.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
raw$method    <- c(rep("asr_total", 27*2))
asr_minimal <- read.table(file = "data/asr_min.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
raw$method    <- c(rep("asr_min", 27*2))
rasr_total <- read.table(file = "data/rasr_total.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
raw$method    <- c(rep("rasr_total", 27*2))
rasr_minimal <- read.table(file = "data/rasr_min.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
raw$method    <- c(rep("rasr_min", 27*2))
source("pairwise.t.test.with.t.and.df.R")
all <- rbind(asr_minimal, rasr_minimal)
result <- pairwise.t.test.with.t.and.df(all$amp, all$method, adjust.method="bonf", paired=TRUE)
print(c("t-value: ", result[[5]]))
source("pairwise.t.test.with.t.and.df.R")
all <- rbind(asr_minimal, rasr_minimal)
result <- pairwise.t.test.with.t.and.df(all$s, all$method, adjust.method="bonf", paired=TRUE)
# Print t-values
print(c("t-value: ", result[[5]]))
all
asr_total <- read.table(file = "data/asr_total.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
asr_total$method    <- c(rep("asr_total", 27*2))
asr_minimal <- read.table(file = "data/asr_min.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
asr_minimal$method    <- c(rep("asr_min", 27*2))
rasr_total <- read.table(file = "data/rasr_total.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
rasr_total$method    <- c(rep("rasr_total", 27*2))
rasr_minimal <- read.table(file = "data/rasr_min.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
rasr_minimal$method    <- c(rep("rasr_min", 27*2))
source("pairwise.t.test.with.t.and.df.R")
all <- rbind(asr_minimal, rasr_minimal)
result <- pairwise.t.test.with.t.and.df(all$s, all$method, adjust.method="bonf", paired=TRUE)
# Print t-values
print(c("t-value: ", result[[5]]))
all
asr_minimal
asr_total <- read.table(file = "data/asr_total.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
asr_total$method    <- c(rep("asr_total", 158))
asr_total
asr_total <- read.table(file = "data/asr_total.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
asr_total$method    <- c(rep("asr_total", 158))
asr_minimal <- read.table(file = "data/asr_min.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
asr_minimal$method    <- c(rep("asr_min", 158))
rasr_total <- read.table(file = "data/rasr_total.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
rasr_total$method    <- c(rep("rasr_total", 158))
rasr_minimal <- read.table(file = "data/rasr_min.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
rasr_minimal$method    <- c(rep("rasr_min", 158))
source("pairwise.t.test.with.t.and.df.R")
all <- rbind(asr_minimal, rasr_minimal)
all
result <- pairwise.t.test.with.t.and.df(all$s, all$method, adjust.method="bonf", paired=TRUE)
# Print t-values
print(c("t-value: ", result[[5]]))
print(c("Df: ", result[[6]]))
cohen.d(all$amp, as.factor(all$condition), paired = TRUE)
cohen.d(all$s, as.factor(all$method), paired = TRUE)
result
27*2
asr_total <- read.table(file = "data/asr_total.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
asr_total$method    <- c(rep("asr_total", 158)) # blocks: ca 6 per subject: 27*6
asr_minimal <- read.table(file = "data/asr_min.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
asr_minimal$method    <- c(rep("asr_min", 158))
rasr_total <- read.table(file = "data/rasr_total.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
rasr_total$method    <- c(rep("rasr_total", 158))
rasr_minimal <- read.table(file = "data/rasr_min.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
rasr_minimal$method    <- c(rep("rasr_min", 158))
source("pairwise.t.test.with.t.and.df.R")
all <- rbind(asr_minimal, rasr_minimal)
result <- pairwise.t.test.with.t.and.df(all$s, all$method, adjust.method="bonf", paired=TRUE)
print(result)
# Print t-values
print(c("t-value: ", result[[5]]))
# Print dfs
print(c("Df: ", result[[6]]))
# Cohen's D for t-test
cohen.d(all$s, as.factor(all$method), paired = TRUE)
all <- rbind(asr_total, rasr_total)
result <- pairwise.t.test.with.t.and.df(all$s, all$method, adjust.method="bonf", paired=TRUE)
# p-value
print(result)
# Print t-values
print(c("t-value: ", result[[5]]))
# Print dfs
print(c("Df: ", result[[6]]))
# Cohen's D for t-test
cohen.d(all$s, as.factor(all$method), paired = TRUE)
qqplot(asr_minimal)
qqplot(asr_minimal$s)
?qq.plot
?qqplot
y <- asr_minimal$s
qqnorm(y); qqline(y, col = 2)
qqplot(y, rt(300, df = 5))
y <- asr_minimal$s
qqnorm(y); qqline(y, col = 2)
qqplot(y, rt(158, df = 157))
wilcox.test(asr_minimal$s, asr_total$s)
wilcox.test(all$s ~ all$method)
wilcox.test(asr_minimal$s, asr_total$s, paired=TRUE)
asr_total <- read.table(file = "data/asr_total.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
asr_total$method    <- c(rep("asr_total", 158)) # blocks: ca 6 per subject: 27*6
asr_minimal <- read.table(file = "data/asr_min.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
asr_minimal$method    <- c(rep("asr_min", 158))
rasr_total <- read.table(file = "data/rasr_total.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
rasr_total$method    <- c(rep("rasr_total", 158))
rasr_minimal <- read.table(file = "data/rasr_min.csv",header = FALSE, dec = ".", col.names = "s", sep=",")
rasr_minimal$method    <- c(rep("rasr_min", 158))
source("pairwise.t.test.with.t.and.df.R")
# minimal times
all <- rbind(asr_minimal, rasr_minimal)
result <- pairwise.t.test.with.t.and.df(all$s, all$method, adjust.method="bonf", paired=TRUE)
# p-value
print(result)
# Print t-values
print(c("t-value: ", result[[5]]))
# Print dfs
print(c("Df: ", result[[6]]))
# Cohen's D for t-test
cohen.d(all$s, as.factor(all$method), paired = TRUE)
library(ez)
library(effsize)
source("pairwise.t.test.with.t.and.df.R")
# minimal times
all <- rbind(asr_minimal, rasr_minimal)
result <- pairwise.t.test.with.t.and.df(all$s, all$method, adjust.method="bonf", paired=TRUE)
# p-value
print(result)
# Print t-values
print(c("t-value: ", result[[5]]))
# Print dfs
print(c("Df: ", result[[6]]))
# Cohen's D for t-test
cohen.d(all$s, as.factor(all$method), paired = TRUE)
plot(all$s)
# total times
all <- rbind(asr_total, rasr_total)
result <- pairwise.t.test.with.t.and.df(all$s, all$method, adjust.method="bonf", paired=TRUE)
# p-value
print(result)
# Print t-values
print(c("t-value: ", result[[5]]))
# Print dfs
print(c("Df: ", result[[6]]))
# Cohen's D for t-test
cohen.d(all$s, as.factor(all$method), paired = TRUE)
wilcox.test(asr_minimal$s, asr_total$s, paired=TRUE)
plot(all$s)
std(asr_total$s)
sd(asr_total$s)
sd(asr_minimal$s)
sd(rasr_minimal$s)
sd(rasr_total$s)
wilcox.test(asr_minimal$s, asr_total$s, paired=TRUE)
wilcox.test(asr_minimal$s, asr_total$s)
?wilcox.test
wilcox.test(rasr_minimal$s, asr_minimal$s, paired=TRUE)
